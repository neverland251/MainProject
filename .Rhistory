a <- a + 1
}
else{
}
}
sgn_func <- function(x,c){
for(i in x){
if(x - c > 0){
a <- a + 1
}
else{
}
}
}
sgn_func(ss_ratio,0.618)
a
a <- 0
sgn_func <- function(x,c){
for(i in x){
if(x - c > 0){
a <- a + 1
}
else{
}
}
}
sgn_func(ss_ratio,0.618)
ss_ratiop1]
ss_ratiopa1]
ss_ratiop[1]
ss_ratio[1]
warnings()
sgn_func <- function(x,c){
for(i in x){
if(i - c > 0){
a <- a + 1
}
else{
}
}
}
sgn_func(ss_ratio,0.618)
a
sgn_func <- function(x,c){
for(i in x){
if(i - c > 0){
a <- a + 1
}
else{
}
}
print(a)
}
sgn_func(ss_ratio,0.618)
b <- sgn_func(ss_ratio,0.618)
sgn_func <- function(x,c){
for(i in x){
if(i - c > 0){
a <- a + 1
}
else{
}
}
}
b <- sgn_func(ss_ratio,0.618)
b
sgn_func <- function(x,c){
for(i in x){
if(i - c > 0){
a <- a + 1
}
else{
}
}
a
}
b <- sgn_func(ss_ratio,0.618)
b
sgn_func <- function(x,c){
for(i in x){
if(i - c > 0){
a <- a + 1
}
else{
}
}
return(a)
}
b <- sgn_func(ss_ratio,0.618)
b
pbinom(b,0.5)
pbinom(b,length(ss_ratio),0.5)
2 * pbinom(b,length(ss_ratio),0.5)
pbinom(b,length(ss_ratio),0.5)
b
1 - pbinom(b,length(ss_ratio),0.5)
length(ss_ratio)
?bin
?pbinom
pbinom(16,25,0.5)
1 - pbinom(16,25,0.5)
pbinom(0:16,25,0.5)
pbinom(15,25,0.5)
1 - pbinom(15,25,0.5)
a <- (16-(25/2))/(25^(1/2)/2)
a
pnorm(a,0,1)
1 - pnorm(a,0,1)
1 - pbinom(16,25,0.5)
1 - pbinom(16,25,1/2)
r <- function(x,y){
mean_x <- sum(x)/length(x)
mean_y <- sum(y)/length(y)
a <- (sum((x-mean_x)*(y-mean_y)))/((sum((x-mean_x)^2))*(sum((y-mean_y)^2)))^(1/2)
return(a)
}
t_cor <- r*((n-2)^(1/2))/((1-r^2))^(1/2)
r <- 0.89
r*((n-2)^(1/2))/((1-r^2))^(1/2)
?pt
pt(19.32306,n-2)
dt(19.32306,n-2)
t_cor <- r*((n-2)^(1/2))/((1-r^2))^(1/2)
dt(t_cor,n-2)
data.frame(n = (100,200))
data.frame(n = c(100,200))
data.frame(n = c(100,200),mean_x = c(10,12), mean_y = c(20,22), std_x = c(5,6), std_y = c(8,10), r = c(0.7,0.8))
test_result <- data.frame(n = c(100,200),mean_x = c(10,12), mean_y = c(20,22), std_x = c(5,6), std_y = c(8,10), r = c(0.7,0.8))
test_result
qnorm(0.1146,0,1)
5/qnorm(0.1146,0,1)
5/qnorm(0.1148,0,1)
qnorm(0.1148,0,1)
pnorm(1.20-(0.5/(1/5)))
0.5/(1/5)
1 - pnorm(1.20-(0.5/(1/5)))
y <- c(0.44,0.47,0.47,0.59,0.66,0.73,0.81,0.88,1.06,1.20,1.35,1.49,1.61,2.12,11.90,12.40,14.20,15.90,18.20,21.20,4.30,2.40,2.70,2.90)
x <- rep(50:73)
y <- c(0.44,0.47,0.47,0.59,0.66,0.73,0.81,0.88,1.06,1.20,1.35,1.49,1.61,2.12,11.90,12.40,14.20,15.90,18.20,21.20,4.30,2.40,2.70,2.90)
x <- rep(50:73)
rank(y)
fun <- 12^(1/2)*((rank(y)/(n-1))-(1/2))
fun
wilcoxn_t <- sum((x-mean(x))*fun)
wilcoxn_tw
wilcoxn_t
n <- length(y)
## (1)라오-크래머 하한을 만족하는 윌콕슨 점수 함수 : root(12) * ((y순서통계량/n-1) * 1/2))
## 우선 정규화를 위한 피벗을 만들기 위해, 분자에 들어가는 값인 윌콕슨 t를 먼저 구해준다.
fun <- 12^(1/2)*((rank(y)/(n-1))-(1/2))
wilcoxn_t <- sum((x-mean(x))*fun)
wilcoxn_t
Sa <- sum(fun)
Sa
sum(x-mean(x))^2 * Sa^2 * (n-1)^(-1)
Sa
sum((x-mean(x))^2) * Sa^2 * (n-1)^(-1)
var <- sum((x-mean(x))^2) * Sa^2 * (n-1)^(-1)
x_1500 <- c(373.2,246,245.4,252,243,236.8,241.8,233.6,233.2,231.2,227.8,229.8,225.2,221.2,215.6,218.1,214.9,216.3,219.2,218.4)
x_1500 <- c(373.2,246,245.4,252,243,236.8,241.8,233.6,233.2,231.2,227.8,229.8,225.2,221.2,215.6,218.1,214.9,216.3,219.2,218.4)
y_maraton <- c(3530,3585,5333,3084,3318,2215,1956,2483,1977,1896,1759,2092,1383,1500,916,731,1226,740,595,663)
sign(x_1500)
(factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
)
factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
for(i in rep(0:length(x_1500))){
sum(sign((x_1500[i] - x_1500[i-1])*(y_maraton[i] - y_maraton[i-1]))) * factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
}
for(i in rep(0:length(x_1500))){
a <- sum(sign((x_1500[i] - x_1500[i-1])*(y_maraton[i] - y_maraton[i-1]))) * factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
}
a
sum(sign((x_1500[i] - x_1500[i-1])*(y_maraton[i] - y_maraton[i-1])))
for(i in rep(0:length(x_1500))){
a[i] <- sign((x_1500[i] - x_1500[i-1])*(y_maraton[i] - y_maraton[i-1]))
b <- sum(a) * factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
}
i
for(i in rep(1:length(x_1500))){
a[i] <- sign((x_1500[i] - x_1500[i-1])*(y_maraton[i] - y_maraton[i-1]))
b <- sum(a) * factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
}
i
for(i in rep(2:length(x_1500))){
a[i] <- sign((x_1500[i] - x_1500[i-1])*(y_maraton[i] - y_maraton[i-1]))
b <- sum(a) * factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
}
i
i
a
a <- c()
for(i in rep(2:length(x_1500))){
a[i] <- sign((x_1500[i] - x_1500[i-1])*(y_maraton[i] - y_maraton[i-1]))
b <- sum(a) * factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
}
a
b
a <- c()
for(i in rep(2:length(x_1500))){
a[i-1] <- sign((x_1500[i] - x_1500[i-1])*(y_maraton[i] - y_maraton[i-1]))
b <- sum(a) * factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))
}
a
b
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
b
for(i in rep(2:length(x_1500))){
for(i in rep(2:length(x_1500))){
for(j in rep(1:length(x_1500)-1)){
a[i-1] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
}
}
for(i in rep(2:length(x_1500))){
for(j in rep(1:length(x_1500)-1)){
a[i-1] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
}
}
rep(1:length(x_1500)-1)
a
i
j
a
print(i)
for(i in rep(2:length(x_1500))){
for(j in rep(1:length(x_1500)-1)){
a[i-1] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
}
print(i)
}
i
x_1500[2]
x_1500[i]
x_1500[j]
x_1500
j
rep(1:length(x_1500)-1))
rep(1:length(x_1500)-1)
rep(2:length(x_1500)-1)
for(i in rep(3:length(x_1500))){
for(j in rep(2:length(x_1500)-1)){
a[i-1] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
}
print(i)
}
rep(3:length(x_1500)
)
for(i in rep(2:length(x_1500))){
for(j in rep(1:(length(x_1500)-1))){
a[i-1] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
}
print(i)
}
j
rep(1:(length(x_1500)-1))
a
b
sum(a)
(factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
factorial(length(x_1500))
factorial(length(x_1500))/(factorial(2)*factorial(length(x_1500)-2))
factorial(length(x_1500))/(factorial(2)*factorial(length(x_1500)-2))^(-1)
(factorial(length(x_1500))/(factorial(2)*factorial(length(x_1500)-2)))^(-1)
factorial(2)
factorial(length(x_1500)-2)
a
for(i in rep(2:length(x_1500))){
for(j in rep(1:(length(x_1500)-1))){
a[i-1] <- sum(sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j])))
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
}
print(i)
}
a
a <- c()for(i in rep(2:length(x_1500))){
for(j in rep(1:(length(x_1500)-1))){
a[i-1] <- sum(sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j])))
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
}
print(i)
}
a <- c()
for(i in rep(2:length(x_1500))){
for(j in rep(1:(length(x_1500)-1))){
a[i-1] <- sum(sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j])))
b <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
}
print(i)
}
a
a <- c()
for(i in rep(2:length(x_1500))){
for(j in rep(1:(length(x_1500)-1))){
a[j] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
}
b[i] <- sum(a) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
print(i)
}
a
b
a <- c()
for(i in rep(2:length(x_1500))){
for(j in rep(1:(length(x_1500)-1))){
a[j] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
}
b[i] <- sum(a)
print(i)
}
b
sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
a
b
a <- c()
b <- c()
for(i in rep(2:length(x_1500))){
for(j in rep(1:(length(x_1500)-1))){
a[j] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
}
b[i] <- sum(a)
print(i)
}
sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
b
a <- c()
b <- c()
for(i in rep(2:length(x_1500))){
for(j in rep(1:(length(x_1500)-1))){
a[j] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
}
b[i-1] <- sum(a)
print(i)
}
b
sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
sum(a)
b
sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
for(i in rep(2:length(x_1500))){
for(j in rep(1:(i-1))){
a[j] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
}
b[i-1] <- sum(a)
print(i)
}
a
b
j
a <- c()
b <- c()
for(i in rep(2:length(x_1500))){
for(j in rep(1:(i-1))){
a[j] <- sign((x_1500[i] - x_1500[j])*(y_maraton[i] - y_maraton[j]))
print(j)
}
b[i-1] <- sum(a)
print(i)
}
a
sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
print(sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))))
n <- length(x_1500)
tau / (2*(2*n+1) / 9*n*(n-1))^(1/2)
tau <- sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))))
n <- length(x_1500)
tau / (2*(2*n+1) / 9*n*(n-1))^(1/2)
tau <- sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500))))
tau <- sum(b) * (factorial(2)*factorial(length(x_1500) - 2)/factorial(length(x_1500)))
tau
tau / (2*(2*n+1) / 9*n*(n-1))^(1/2)
(2*(2*n+1) / 9*n*(n-1))^(1/2)
(2*(2*n+1)) / (9*n*(n-1))^(1/2)
(2*(2*n+5)) / (9*n*(n-1))^(1/2)
tau / (2*(2*n+1)) / (9*n*(n-1))^(1/2)
tau
(2*(2*n+1)) / (9*n*(n-1))^(1/2)
((2*(2*n+1)) / (9*n*(n-1)))^(1/2)
tau / ((2*(2*n+1)) / (9*n*(n-1)))^(1/2)
tau / ((2*(2*n+5)) / (9*n*(n-1)))^(1/2)
tau / ((2*(2*n+1))/(9*n*(n-1)))^(1/2)
tau
tau / ((2*(2*n+1))/(9*n*(n-1)))^(1/2)
(9*n*(n-1)
)
(2*(2*n+1)
)
((2*(2*n+1))/(9*n*(n-1)))^(1/2)
((2/9)*(2*n+1)/(9*n*(n-1)))^(1/2)
tau / ((2/9)*(2*n+1)/(9*n*(n-1)))^(1/2)
tau / ((2/9)*((2*n+1)/(9*n*(n-1))))^(1/2)
((2/9)*((2*n+1)/(9*n*(n-1))))^(1/2)
((2/9)*((2*n+5)/(9*n*(n-1))))^(1/2)
((2/9)*(((2*n)+5)/(9*n*(n-1))))^(1/2)
((2/9)*((2*n+1)/(9*n*(n-1))))^(1/2)
tau / ((2/9)*((2*n+1)/(9*n*(n-1))))^(1/2)
tau / ((2/9)*((2*n+1)/(n*(n-1))))^(1/2)
qnorm(z,0,1)
qnorm(Z,0,1)
Z <- tau / ((2/9)*((2*n+1)/(n*(n-1))))^(1/2)
qnorm(Z,0,1)
Z
qnorm(4,0,1)
qnorm(2,0,1)
qnorm(1,0,1)
qnorm(1,mu=0,sd=1)
qnorm(1,mean=0,sd=1)
qnorm
?qnorm
pnorm(1,0,1)
pnorm(Z,0,1)
1 - pnorm(Z,0,1)
rs <- (sum((rank(x_1500) - (n+1)/2) * (rank(y_maraton) - (n+1)/2)))/(n*(n^2-1)/12)
rs
rs/(1/(n-1))
rs/(1/(n-1))^(1/2)
1 - pnorm(Z_rs,0,1)
Z_rs <- rs/(1/(n-1))^(1/2)
1 - pnorm(Z_rs,0,1)
plot(x_1500,y_maraton)
X_y <- data.frame(x_1500,y_maraton)
x_y
X_y
ggplot(X_y,aes(x=x_1500,y=y_maraton))
library("ggplot")
X_y <- data.frame(x_1500,y_maraton)
ggplot(X_y,aes(x=x_1500,y=y_maraton))
library("ggplot2")
X_y <- data.frame(x_1500,y_maraton)
ggplot(X_y,aes(x=x_1500,y=y_maraton))
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point()
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text()
rownames(X_y)
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y))
?geom_text
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x = 0.5)
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_y= 0.5)
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_y= 1)
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 1)
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2)
ww
install.packages("Rfit")
n <- length(y)
## (1)라오-크래머 하한을 만족하는 윌콕슨 점수 함수 : root(12) * ((y순서통계량/n-1) * 1/2))
## 우선 정규화를 위한 피벗을 만들기 위해, 분자에 들어가는 값인 윌콕슨 t를 먼저 구해준다.
fun <- 12^(1/2)*((rank(y)/(n-1))-(1/2))
wilcoxn_t <- sum((x-mean(x))*fun)
Sa <- sum(fun)
var <- sum((x-mean(x))^2) * Sa^2 * (n-1)^(-1)
rm(var)
var_t <- sum((x-mean(x))^2) * Sa^2 * (n-1)^(-1)
Z_t <- wilcoxn_t/var_t^(1/2)
Z_t
pnorm(Z_t,0,1)
1 - pnorm(Z_t,0,1)
b <- sum(y*(x-mean(x)))/sum((x-mean(x))^2)
b <- sum(y_maraton*(x_1500-mean(x_1500)))/sum((x_1500-mean(x_1500))^2)
b
lm(y_maraton~x_1500)
mean(y_maraton)
a <- mean(y_maraton)
glm(y_maraton~x_1500)
-2598 + 19.6 * (y_maraton)
-2598 + (19.6 * (x_1500 - mean(x_1500)))
2598 + (19.6 * (x_1500 - mean(x_1500)))
mean(y_maraton) + (19.6 * (x_1500 - mean(x_1500)))
mean(y_maraton)/10 + (19.6 * (x_1500 - mean(x_1500)))
mean(y_maraton) + (19.6 * (x_1500 - mean(x_1500)))
-mean(y_maraton) + (19.6 * (x_1500 - mean(x_1500)))
lm(y_maraton ~ x_1500)
z_lm <- lm(y_maraton ~ x_1500)
z_lm <- lm(y_maraton ~ x_1500)
library("Rfit")
?ww
?WW
library("Rft")
library("Rfit")
?rfit
z_wilcoxon <- rfit(y_maraton~x_1500,scores = wscores)
z_wilcoxon
str(z)
str(z_wilcoxon)
z_wilcoxon$fitted.values
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(z_wilcoxon$fitted.values)
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values))
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values)) + geom_line(aes(y = z_lm))
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values)) + geom_line(aes(y = z_lm$fitted.values))
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values),color = red) + geom_line(aes(y = z_lm$fitted.values))
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values),color = "red") + geom_line(aes(y = z_lm$fitted.values))
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values),color = "red") + geom_line(aes(y = z_lm$fitted.values),color = blue)
ggplot(X_y,aes(x=x_1500,y=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values),color = "red") + geom_line(aes(y = z_lm$fitted.values),color = "blue")
y_maraton
z_lm <- lm(x_1500 ~ y_maraton)
z_lm
z_wilcoxon <- rfit(x_1500~y_maraton,scores = wscores)
ggplot(X_y,aes(y=x_1500,x=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(x=z_wilcoxon$fitted.values),color = "red") + geom_line(aes(x = z_lm$fitted.values),color = "blue")
ggplot(X_y,aes(y=x_1500,x=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values),color = "red") + geom_line(aes(y = z_lm$fitted.values),color = "blue")
y_1500 <- c(373.2,246,245.4,252,243,236.8,241.8,233.6,233.2,231.2,227.8,229.8,225.2,221.2,215.6,218.1,214.9,216.3,219.2,218.4)
x_maraton <- c(3530,3585,5333,3084,3318,2215,1956,2483,1977,1896,1759,2092,1383,1500,916,731,1226,740,595,663)
## 1) 단순선형회귀와 윌콕슨 선형회귀를 각각 적합해준다.
b <- sum(x_maraton*(y_1500-mean(y_1500)))/sum((y_1500-mean(y_1500))^2)
b
## 1) 단순선형회귀와 윌콕슨 선형회귀를 각각 적합해준다.
b <- sum(y_1500*(y_maraton-mean(x_maraton)))/sum((x_maraton-mean(x_maraton))^2)
b
a <- mean(y_1500)
a
ggplot(X_y,aes(y=x_1500,x=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_x= 2) + geom_line(aes(y=z_wilcoxon$fitted.values),color = "red") + geom_line(aes(y = z_lm$fitted.values),color = "blue")
ggplot(X_y,aes(y=x_1500,x=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_y= 2) + geom_line(aes(y=z_wilcoxon$fitted.values),color = "red") + geom_line(aes(y = z_lm$fitted.values),color = "blue")
ggplot(X_y,aes(y=x_1500,x=y_maraton)) + geom_point() + geom_text(label = rownames(X_y),nudge_y= 4) + geom_line(aes(y=z_wilcoxon$fitted.values),color = "red") + geom_line(aes(y = z_lm$fitted.values),color = "blue")
